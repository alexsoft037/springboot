#改动
server.port=8080
xiaoer.siteUrl = http://srkj.guoshanchina.com
ilvb.iLiveAuthServer = http://live.guoshanchina.com
#xiaoer.siteUrl = http://192.168.1.108:8080
#ilvb.iLiveAuthServer = http://192.168.1.108:7002

qq.appId = 101549990
qq.appKey = 6c4333a5e80070028afbe44c81005fc8
weixin.appId = wx983d11431bf5d105
weixin.appKey = 455e3a18894db19d2405100e47b53da0
weibo.appId = 1278472701
weibo.appKey = 08db9f22840644c47968bc005c2fe341
oss.seed = ose735WrDHuAHG7MCzl4a61Db-1qu9gf
oss.uid = 1990263366824057


guoshan.siteUrl = http://test.guoshanchina.com/class/doAction.php
ezviz.appKey = 4b3345b06ca847ca9648ff28b4f17d6a
ezviz.appSecret = 166fde29d6b03dec2cd8f3bbf5396cc9
baidu.apiKey = jdGpsNuGztUHXlhTZ3y4sl22ymEl0gui
baidu.ak = OwB4sXdaKdnah9EIZMrXXLGcnu8gTz4h
baidu.sk = rGOQnf92mZuUS7EGe59ciGbUghLlwApK
ilvb.appid = 1400104369
push.accessId = 2100313373
push.secretKey = b177878baf2f3327f001379086d9bbda

eureka.client.serviceUrl.defaultZone=http://localhost:8001/eureka/
eureka.client.enabled=false
#关闭页面缓存
spring.freemarker.cache=false

# 数据库访问配置
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
#spring.datasource.url=jdbc:mysql://localhost:3306/db_srkj?uallowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8
#spring.datasource.username=root
#spring.datasource.password=admin123
#spring.datasource.url=jdbc:mysql://rm-bp195qct86bpp011c.mysql.rds.aliyuncs.com:3306/db_srkj?uallowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8
#spring.datasource.username=srkj
#spring.datasource.password=srkj@2018
spring.datasource.url=jdbc:mysql://localhost:3306/db_srkj_server?uallowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8
spring.datasource.username=root
spring.datasource.password=123456


fdfs.soTimeout=1500
fdfs.connectTimeout=600
fdfs.thumbImage.width=150
fdfs.thumbImage.height=150
fdfs.trackerList[0]=192.168.1.106:22122
fdfs.base.adress=http://192.168.1.106
spring.http.multipart.maxFileSize=1024MB
server.tomcat.max-http-post-size=500000000
spring.http.multipart.maxRequestSize=1024MB
# 下面为连接池的补充设置，应用到上面所有数据源中
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=20
# 配置获取连接等待超时的时间
spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters=stat,log4j
spring.datasource.logSlowSql=true

# webSocket port webSocket �˿�����
ws.port=8888

#新加
swagger.show=true