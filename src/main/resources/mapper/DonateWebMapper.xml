<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="xin.xiaoer.modules.website.dao.DonateWebDao">

    <resultMap id="donateWebMap" type="xin.xiaoer.modules.website.entity.DonateWeb">
        <result property="id" column="id"></result>
        <result property="title" column="title"></result>
        <result property="featuredImage" column="featured_image"></result>
        <result property="readCount" column="read_count"></result>
        <result property="state" column="state"></result>
        <result property="createAt" column="create_at"></result>
        <result property="author" column="author"></result>
        <result property="content" column="content"></result>
        <result property="rank" column="rank"></result>
    </resultMap>

    <select id="getById" resultType="xin.xiaoer.modules.website.entity.DonateWeb">
        SELECT
        d.*
        FROM
        donate_web d
        WHERE
        1 = 1
        <if test="id != null">
            AND d.id=#{id}
        </if>
    </select>
    <select id="getNewDonate" resultType="xin.xiaoer.modules.website.entity.DonateWeb">
        SELECT
        d.*
        FROM
        donate_web d
        WHERE
        1 = 1
        AND d.state = '1'
        ORDER BY
        d.create_at DESC
        <if test="offset != null and limit != null">
            limit #{offset},#{limit}
        </if>
    </select>
    <select id="getHotDonate" resultType="xin.xiaoer.modules.website.entity.DonateWeb">
        SELECT
        d.*
        FROM
        donate_web d
        WHERE
        1 = 1
        AND d.state = '1'
        ORDER BY
        d.rank,
        d.create_at DESC
        <if test="offset != null and limit != null">
            limit #{offset},#{limit}
        </if>
    </select>
    <select id="getCount" resultType="int">
        SELECT
            COUNT(*)
        FROM
            donate_web t
        <include refid="where_clause" />
    </select>
    <select id="getTitles" resultMap="donateWebMap">
        SELECT
        t.id,t.title,t.create_at
        FROM
        donate_web t
        <include refid="where_clause"/>
        <if test="offset != null and limit != null">
            LIMIT #{offset},
            #{limit}
        </if>
    </select>
    <select id="getListAll" resultType="xin.xiaoer.modules.website.entity.DonateWeb">
        SELECT
            *
        FROM
            donate_web d
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
            <otherwise>
                order by id desc
            </otherwise>
        </choose>
        <if test="offset != null and limit != null">
            LIMIT #{offset},
            #{limit}
        </if>
    </select>

    <select id="getList" resultType="xin.xiaoer.modules.website.entity.DonateWeb">
        SELECT
        *
        FROM
        donate_web t
        <include refid="where_clause" />
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
            <otherwise>
                order by id desc
            </otherwise>
        </choose>
        <if test="offset != null and limit != null">
            LIMIT #{offset},
            #{limit}
        </if>
    </select>
    <!--条件-->
    <sql id="where_clause">
        <where>
            1=1
            <if test="state != null and state != ''">AND t.state = #{state}</if>
            <if test="titleVague != null and titleVague != ''">and t.title like concat('%',#{titleVague},'%') </if>
        </where>
    </sql>

    <insert id="save" parameterType="xin.xiaoer.modules.website.entity.DonateWeb" >
        INSERT INTO donate_web (
            `id`,
            `title`,
            `featured_image`,
            `read_count`,
            `state`,
            `create_at`,
            `author`,
            `content`,
            `rank`,
            `create_by`,
            `update_by`,
            `update_at`,
            `create_user`
        )
        VALUES
            (
                #{id},
                #{title},
                #{featuredImage},
                #{readCount},
                #{state},
                #{createAt},
                #{author},
                #{content},
                #{rank},
                #{createBy},
                #{updateBy},
                #{updateAt},
                #{createUser}
            )
    </insert>

    <delete id="deleteBatch">
        delete from donate_web where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <update id="update" parameterType="xin.xiaoer.modules.website.entity.DonateWeb">
        update donate_web
        <set>
            <if test="title != null">`title` = #{title},</if>
            <if test="createBy != null">`create_by` = #{createBy},</if>
            <if test="createUser != null">`create_user` = #{createUser},</if>
            <if test="content != null">`content` = #{content},</if>
            <if test="featuredImage != null">`featured_image` = #{featuredImage},</if>
            <if test="author != null">`author` = #{author},</if>
            <if test="readCount != null and readCount != 0">`read_count` = #{readCount},</if>
            <if test="createAt != null">`create_at` = #{createAt},</if>
            <if test="state != null">`state` = #{state},</if>
            <if test="updateBy != null">`update_by` = #{updateBy},</if>
            <if test="rank != null">`rank` = #{rank},</if>
            `update_at` = NOW()
        </set>
        where id = #{id}
    </update>

</mapper>