<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="xin.xiaoer.modules.website.dao.LiveRoomUserDao">
    <insert id="save" parameterType="xin.xiaoer.modules.website.entity.LiveRoomUser">
        insert into live_room_user
        (
        `live_id`,
        `user_id`,
        `live_role_id`,
        `status`,
        `join_at`
        )
        values
        (
        #{liveId},
        #{userId},
        #{liveRoleId},
        #{status},
        Now()
        )
    </insert>

    <select id="getCountById" resultType="int">
        select count(*) from `live_room_user` WHERE  `live_id`=#{liveId} and `status`= '1'
    </select>

    <select id="getDetail" resultType="xin.xiaoer.modules.website.entity.LiveRoomUser">
        SELECT * from `live_room_user` WHERE `live_id` = #{liveId} and `user_id` = #{userId}
    </select>

    <select id="getUserList" resultType="xin.xiaoer.modules.website.entity.LiveRoomUserListItem">
        SELECT lru.role_name,
        lru.live_role_id,
        lru.user_id,
        lru.nickname,
        sf.url as avatar
        from (SELECT lr.role_name,
        lr.live_role_id,
        su.user_id,
        su.nickname,
				su.avatar
				from `live_room_user` lru
        left join `sys_user` su
        on lru.user_id=su.user_id
				left join `live_role` lr
        on lru.live_role_id=lr.live_role_id
        where lru.status='1' and lru.live_id=#{liveId}
        order by lr.live_role_id desc) lru
        left join sys_file sf
		on sf.upload_id = lru.avatar
        <if test="offset != null and limit != null">
            limit #{offset}, #{limit}
        </if>
    </select>

    <update id="update">
        update `live_room_user`
        <set>
            <if test="liveRoleId != null">`live_role_id` = #{liveRoleId}, </if>
            <if test="status != null">`status` = #{status}, </if>
            `join_at` = NOW()
        </set>
        where `live_id` = #{liveId} and `user_id` = #{userId}
    </update>

    <delete id="deleteById">
        delete from live_room_user where live_id = #{liveId} and user_id=#{userId}
    </delete>
</mapper>