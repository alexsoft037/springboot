<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="xin.xiaoer.modules.book.dao.BookmarkDao">

	<!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="xin.xiaoer.modules.book.entity.Bookmark" id="bookmarkMap">
        <result property="id" column="id"/>
        <result property="bookId" column="book_id"/>
        <result property="userId" column="user_id"/>
        <result property="createAt" column="create_at"/>
    </resultMap>

	<select id="get" resultType="xin.xiaoer.modules.book.entity.Bookmark">
		select * from bookmark where id = #{value}
	</select>

	<select id="getByUserAndBook" resultType="xin.xiaoer.modules.book.entity.Bookmark">
		select * from bookmark where user_id = #{userId} and book_id = #{bookId} limit 1
	</select>

	<select id="getList" resultType="xin.xiaoer.modules.book.entity.Bookmark">
		select * from bookmark t <include refid="where_clause" />
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
			<otherwise>
                order by id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="getCount" resultType="int">
		select count(*) from bookmark t  <include refid="where_clause" />
	</select>

    <!-- 搜索数据区域 -->
    <sql id="where_clause">
        <where>
            1=1
            <if test="id != null and id != ''"> and t.id = #{id} </if>
    		<if test="idVague != null and idVague != ''"> and t.id like concat('%',#{idVague},'%') </if>
            <if test="bookId != null and bookId != ''"> and t.book_id = #{bookId} </if>
    		<if test="bookIdVague != null and bookIdVague != ''"> and t.book_id like concat('%',#{bookIdVague},'%') </if>
            <if test="userId != null and userId != ''"> and t.user_id = #{userId} </if>
    		<if test="userIdVague != null and userIdVague != ''"> and t.user_id like concat('%',#{userIdVague},'%') </if>
            <if test="createAt != null and createAt != ''"> and t.create_at = #{createAt} </if>
    		<if test="createAtVague != null and createAtVague != ''"> and t.create_at like concat('%',#{createAtVague},'%') </if>
        </where>
    </sql>
	 
	<insert id="save" parameterType="xin.xiaoer.modules.book.entity.Bookmark" useGeneratedKeys="true" keyProperty="id">
		insert into bookmark
		(
			`book_id`, 
			`user_id`, 
			`create_at`
		)
		values
		(
			#{bookId}, 
			#{userId}, 
			NOW()
		)
	</insert>
	 
	<update id="update" parameterType="xin.xiaoer.modules.book.entity.Bookmark">
		update bookmark 
		<set>
			<if test="bookId != null">`book_id` = #{bookId}, </if>
			<if test="userId != null">`user_id` = #{userId}, </if>
			`create_at` = NOW()
		</set>
		where id = #{id}
	</update>
	
	<delete id="delete">
		delete from bookmark where id = #{value}
	</delete>

	<delete id="deleteByUserAndBook">
		delete from bookmark where user_id = #{userId} and book_id = #{bookId}
	</delete>

	<delete id="deleteBatch">
		delete from bookmark where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

</mapper>