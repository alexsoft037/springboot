<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="xin.xiaoer.modules.html5.dao.HtmlFileDao">

	<!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="xin.xiaoer.modules.html5.entity.HtmlFile" id="htmlFileMap">
        <result property="id" column="id"/>
        <result property="subject" column="subject"/>
        <result property="filePath" column="file_path"/>
        <result property="state" column="state"/>
        <result property="createAt" column="create_at"/>
        <result property="createBy" column="create_by"/>
        <result property="updateAt" column="update_at"/>
        <result property="updateBy" column="update_by"/>
    </resultMap>

	<select id="get" resultType="xin.xiaoer.modules.html5.entity.HtmlFile">
		select * from html_file where id = #{value}
	</select>

	<select id="getList" resultType="xin.xiaoer.modules.html5.entity.HtmlFile">
		select * from html_file t <include refid="where_clause" />
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
			<otherwise>
                order by id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="getCount" resultType="int">
		select count(*) from html_file t  <include refid="where_clause" />
	</select>

    <!-- 搜索数据区域 -->
    <sql id="where_clause">
        <where>
            1=1
            <if test="id != null and id != ''"> and t.id = #{id} </if>
    		<if test="idVague != null and idVague != ''"> and t.id like concat('%',#{idVague},'%') </if>
            <if test="subject != null and subject != ''"> and t.subject = #{subject} </if>
    		<if test="subjectVague != null and subjectVague != ''"> and t.subject like concat('%',#{subjectVague},'%') </if>
            <if test="filePath != null and filePath != ''"> and t.file_path = #{filePath} </if>
    		<if test="filePathVague != null and filePathVague != ''"> and t.file_path like concat('%',#{filePathVague},'%') </if>
            <if test="state != null and state != ''"> and t.state = #{state} </if>
    		<if test="stateVague != null and stateVague != ''"> and t.state like concat('%',#{stateVague},'%') </if>
            <if test="createAt != null and createAt != ''"> and t.create_at = #{createAt} </if>
    		<if test="createAtVague != null and createAtVague != ''"> and t.create_at like concat('%',#{createAtVague},'%') </if>
            <if test="createBy != null and createBy != ''"> and t.create_by = #{createBy} </if>
    		<if test="createByVague != null and createByVague != ''"> and t.create_by like concat('%',#{createByVague},'%') </if>
            <if test="updateAt != null and updateAt != ''"> and t.update_at = #{updateAt} </if>
    		<if test="updateAtVague != null and updateAtVague != ''"> and t.update_at like concat('%',#{updateAtVague},'%') </if>
            <if test="updateBy != null and updateBy != ''"> and t.update_by = #{updateBy} </if>
    		<if test="updateByVague != null and updateByVague != ''"> and t.update_by like concat('%',#{updateByVague},'%') </if>
        </where>
    </sql>
	 
	<insert id="save" parameterType="xin.xiaoer.modules.html5.entity.HtmlFile" useGeneratedKeys="true" keyProperty="id">
		insert into html_file
		(
			`subject`, 
			`file_path`, 
			`state`, 
			`create_at`, 
			`create_by`, 
			`update_at`, 
			`update_by`
		)
		values
		(
			#{subject}, 
			#{filePath}, 
			#{state}, 
			NOW(),
			#{createBy}, 
			NOW(),
			#{updateBy}
		)
	</insert>
	 
	<update id="update" parameterType="xin.xiaoer.modules.html5.entity.HtmlFile">
		update html_file 
		<set>
			<if test="subject != null">`subject` = #{subject}, </if>
			<if test="filePath != null">`file_path` = #{filePath}, </if>
			<if test="state != null">`state` = #{state}, </if>
			<if test="updateBy != null">`update_by` = #{updateBy},</if>
			`update_at` = NOW()
		</set>
		where id = #{id}
	</update>
	
	<delete id="delete">
		delete from html_file where id = #{value}
	</delete>
	
	<delete id="deleteBatch">
		delete from html_file where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

	<select id="getCodeValues" resultType="xin.xiaoer.modules.html5.entity.HtmlFile">
		select id as code,subject as value FROM html_file order by id asc
	</select>

</mapper>